title: 파이썬 의존성 관리와 Pipfile
---
pub_date: 2016-11-23
---
body:

나는 개발자들의 수준, 라이브러리 생태계의 퀄리티와 다양성, 그리고 개발 프로세스의 선진화 정도가 해당 언어 커뮤니티의 수준과 농익은 정도를 나타내는 지표라고 생각한다. 그리고 이 기준을 대표적인 몇몇 언어들에 적용해보면 꽤 맞아들어가는 편이기에, 어느정도 확신을 가지고 있다.

간단한 예로 PHP는 라이브러리들의 다양성과 그 양은 충분하지만, 개발자들의 수준이 한심하기 짝이 없어 높은 수준의 커뮤니티를 가지고 있다고 할 수 없다. 

반대로 Haskell은 구루급 개발자들이 커뮤니티 주류를 이루고, 그들이 작성한 라이브러리의 퀄리티는 항상 경이롭다. 하지만 그 다양성과 양이 프로덕션 레벨에서 사용하기엔 너무나도 부족하기에 커뮤니티가 성숙했다고 말하기 어렵다.

보통 훌륭한 커뮤니티를 가진 언어를 사용하는 개발자는 걱정이 적다. 커뮤니티 구성원들이 각자 겪었던 문제들을 훌륭한 방식으로 해결해놓기 때문이다.

반면 낮은 수준의 커뮤니티를 가진 언어를 사용하는 개발자는 항상 걱정이 많다.

그럼에도 불구하고 파이썬을 주 언어로 개발하면서 한 가지 절망적인 부분이 있었는데, 바로 의존성 관리를 해결하는 방식이었다.


[1]: https://github.com/pypa/pipfile
[2]: https://www.kennethreitz.org/essays/a-better-pip-workflow
