title: 문유삼등(問有三等)
---
pub_date: 2017-08-04
---
body:

오늘 아침 한양대 정민 교수의 조선일보 [사설](http://news.chosun.com/site/data/html_dir/2017/08/02/2017080203225.html)을 읽었다. 문유삼등(文有三等)이라는 말이 있다고 한다. 글에 세 가지 급(級)이 있다는 뜻이다. 조용히 힘 있는 글은 상등이다. 힘을 과하게 준 글은 중등이다. 의미없이 기교 부린 글은 하등이다. 네 글자에 담긴 뜻이 담백해 가슴에 와닿는다. 칼럼에서 인용한 장자의 '사학규범(仕學規範)'을 재인용 해본다.

> 글에는 세 가지 등급이 있다. 상등은 예봉을 감춰 드러내지 않았는데도, 읽고 나면 절로 맛이 있는 글이다. 중등은 마음껏 내달려 모래가 날리고 돌멩이가 튀는 글이다. 하등은 담긴 뜻이 용렬해서 온통 말을 쥐어짜내기만 일삼는 글이다. (文字有三等. 上焉藏鋒不露, 讀之自有滋味. 中焉步驟馳騁, 飛沙走石. 下焉用意庸庸, 專事造語)

나는 취미삼아 공개 소프트웨어를 개발하곤 한다. 몇 주 전까진 작은 중소기업과 스타트업에서 일했다. 둘 모두 문제해결의 연장선 위에 있는 일이다. 각각 '어떻게 좋은 소프트웨어를 만들 수 있을까' 와 '어떻게 돈을 벌 수 있을까' 라는 문제를 푼다. 그래서였을까. 나는 문유삼등(文有三等)을 읽으며 문유삼등(問有三等) — 문제를 해결하는 방식에도 세 가지 등급이 있다 — 을 떠올렸다. 그렇다. 나는 문제를 해결하는 방식에도 세 가지 등급이 있다고 믿는다. 경험에서 비롯된 생각이다. 출퇴근길 이따금씩 떠올렸다. 그 생각의 조각을 여기 가볍게 정리한다.

글과 마찬가지로 문제를 해결하는 방식에도 세 가지 등급이 있다. 춘추시대 오(吳)나라 병법가 손무(孫武)는 싸우지 않고 이기는 것이 상책이라 말했다. 피를 적게 흘린 전승일수록 좋다. 문제를 해결하는 일도 마찬가지다. 그 풀이가 간단하고 직관적일수록 좋다. 조악하고 복잡한 문제해결은 전투에서 피를 많이 흘린 것과 같다. 간혹 방식이 다른 것일 뿐이며, 열등하거나 틀린 풀이는 없다고 주장하는 이들이 있다. 동의하지 않는다. 문제해결 방식엔 우열이 존재한다.

문제를 쥐어짜내 어렵고 복잡하게 푸는 것은 하등이다. 공학에선 이를 가리켜 과잉설계라 한다. 과잉설계는 하책이다. 곡예를 하기 위해 문제를 만들어낸다. 복잡하고 어려워 설명하기 어렵다. 설명하기 어려운 생각은 자연히 좋지 못한 구현으로 귀결된다.[^1] 안하느니만 못하다.

주어진 문제를 그대로 푸는 것은 중등이다. 문제를 해결했으니 못하진 않았다. 그러나 잘했다고 말하기 어렵다. 싸우지 않고 이기는 것이 상책이다. 좋은 장수는 손에 피를 묻히지 않는 법이다. 문제를 풀지 않고 해결하는 방법이 있었을 수 있다. 그러나 문제를 풀고 말았다. 기회를 놓친 셈이니 상등이 되지 못한다.

그렇다면 무엇이 상등일까. 문제를 풀지 않고 해결하는 것이 상등이다. 15세기 지구인은 천동설을 믿었다. 관측 데이터가 이론과 일치하지 않자 모형을 억지로 데이터에 끼워 맞췄다. 하등의 문제해결 방식에 익숙했던 것이다. 코페르니쿠스는 달랐다. '어떻게 관측값을 천동설로 설명할 수 있을까' 라는 기존 문제를 풀지 않았다. 다만 작은 전제를 뒤집었다. 지구인이 우주의 중심이라는 믿음에 질문을 던졌고, 전제를 뒤집어 관측값을 깔끔하게 설명해냈다. 문제를 풀지 않고 해결한 것이다. 이처럼 전제를 뒤집어 문제를 없애거나 쉬운 문제로 치환하는 것이 상등이다. 싸우지 않고 전투를 이긴 셈이다.

안타깝게도 우리가 살아가는 세상엔 작고 쉬운 문제보다 크고 어려운 문제가 더 많다. 크고 어려운 문제를 풀려면 그것을 뒤집을 줄 알아야 한다. 복잡한 문제일수록 그 전제를 뒤집었을 때 쉽게 해결되는 경우가 많기 때문이다. 갈릴레이, 뉴턴, 다윈 그리고 아인슈타인 — 각 시대의 거인은 이런식의 코페르니쿠스적 전회(轉回)에 능했다. 어려운 문제를 해결하려면, 역설적이게도, 문제 풀지 않는 법을 알아야 한다. 문제를 해결하는 일 — 오늘날 대부분의 일 — 을 업으로 삼는 이들이 상등의 문제해결 방식을 몸에 익혀야 하는 이유다.

[^1]: PEP20, [The Zen of Python](https://www.python.org/dev/peps/pep-0020/)
